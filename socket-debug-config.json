{
  "name": "TFADHLOON Socket.io Debugging Guide",
  "version": "1.0.0",
  "description": "Complete debugging guide for Socket.io connection issues",
  "issues_identified": {
    "1": "Production server not starting Socket.io properly",
    "2": "CORS configuration too restrictive",
    "3": "Missing connection health checks",
    "4": "No transport fallback options",
    "5": "Limited error handling and logging"
  },
  "fixes_applied": {
    "server_startup": "Fixed server.listen() to work in both development and production",
    "cors_config": "Enhanced CORS with multiple origins and proper headers",
    "health_checks": "Added ping/pong and connection quality monitoring",
    "error_handling": "Enhanced disconnect handling with detailed logging",
    "debugging_tools": "Added socket-test.html and /api/socket-status endpoint"
  },
  "debugging_steps": {
    "step1": {
      "title": "Check Backend Server Status",
      "commands": [
        "curl https://backend.tfadhloon.com/",
        "curl https://backend.tfadhloon.com/api/games/test",
        "curl https://backend.tfadhloon.com/api/socket-status"
      ],
      "expected": "All should return 200 OK with JSON response"
    },
    "step2": {
      "title": "Test Socket.io Connection",
      "action": "Open socket-test.html in browser",
      "check": "Should see connection attempts and status updates"
    },
    "step3": {
      "title": "Browser Console Check",
      "action": "Open browser DevTools → Console",
      "look_for": [
        "Socket.io connection attempts",
        "CORS errors",
        "Transport upgrade messages",
        "WebSocket connection failures"
      ]
    },
    "step4": {
      "title": "Network Tab Analysis",
      "action": "Open browser DevTools → Network",
      "check": [
        "socket.io/ requests (should be 200 OK)",
        "WebSocket upgrade attempts",
        "Polling fallback requests"
      ]
    }
  },
  "frontend_connection_code": {
    "basic_connection": "const socket = io('https://backend.tfadhloon.com');",
    "with_options": "const socket = io('https://backend.tfadhloon.com', { transports: ['websocket', 'polling'], timeout: 10000 });",
    "connection_events": [
      "socket.on('connect', () => console.log('Connected'));",
      "socket.on('disconnect', () => console.log('Disconnected'));",
      "socket.on('connect_error', (err) => console.error('Connection Error:', err));"
    ]
  },
  "common_issues_solutions": {
    "cors_error": {
      "symptom": "CORS policy error in browser console",
      "solution": "Backend CORS is now configured for multiple origins including production domain"
    },
    "websocket_failed": {
      "symptom": "WebSocket connection failed, falling back to polling",
      "solution": "Normal behavior - Socket.io will auto-fallback to polling"
    },
    "connection_timeout": {
      "symptom": "Connection times out",
      "solution": "Check if server is running and accessible at the domain"
    },
    "transport_error": {
      "symptom": "Transport error or upgrade failed",
      "solution": "Ensure WebSocket support or allow polling transport"
    }
  },
  "production_checklist": [
    "✅ Server starts and listens on correct port",
    "✅ CORS configured for production domains", 
    "✅ Socket.io server initialized with io.listen()",
    "✅ Health check endpoints available",
    "✅ Error handling and logging in place",
    "✅ Connection monitoring active"
  ]
}
